{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/yo/Documentos/kaap/components/context/Teclado.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nvar TextContext = /*#__PURE__*/createContext({});\nexport function TextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(''),\n      typedText = _useState[0],\n      setTypedText = _useState[1];\n\n  function changeText(value) {\n    var novoTexto = typedText + value;\n    setTypedText(novoTexto);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TextContext.Provider, {\n    value: {\n      typedText: typedText,\n      changeText: changeText\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TextProvider, \"FZ2O7u3ROg2RZalb91l/pLa3LKY=\");\n\n_c = TextProvider;\nexport default TextContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextProvider\");","map":{"version":3,"sources":["/home/yo/Documentos/kaap/components/context/Teclado.js"],"names":["createContext","useState","TextContext","TextProvider","children","typedText","setTypedText","changeText","value","novoTexto"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AAEA,IAAMC,WAAW,gBAAGF,aAAa,CAAC,EAAD,CAAjC;AAEA,OAAO,SAASG,YAAT,OAAkC;AAAA;;AAAA,MAAXC,QAAW,QAAXA,QAAW;;AAAA,kBACHH,QAAQ,CAAC,EAAD,CADL;AAAA,MAC9BI,SAD8B;AAAA,MACnBC,YADmB;;AAGrC,WAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,QAAMC,SAAS,GAAGJ,SAAS,GAAGG,KAA9B;AACAF,IAAAA,YAAY,CAACG,SAAD,CAAZ;AACH;;AAED,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBJ,MAAAA,SAAS,EAATA,SADyB;AAEzBE,MAAAA,UAAU,EAAVA;AAFyB,KAA7B;AAAA,cAKKH;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAjBeD,Y;;KAAAA,Y;AAmBhB,eAAeD,WAAf","sourcesContent":["import { createContext, useState } from 'react';\n\nconst TextContext = createContext({});\n\nexport function TextProvider({children}) {\n    const [typedText, setTypedText] = useState('')\n\n    function changeText(value) {\n        const novoTexto = typedText + value\n        setTypedText(novoTexto)\n    }\n\n    return (\n        <TextContext.Provider value={{\n            typedText,\n            changeText,\n        }}\n        >\n            {children}\n        </TextContext.Provider>\n    )\n}\n\nexport default TextContext;"]},"metadata":{},"sourceType":"module"}